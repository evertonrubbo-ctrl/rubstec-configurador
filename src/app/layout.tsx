// src/app/layout.tsx
import type { Metadata, Viewport } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import "./globals.css";
import { Providers } from "./providers";
import { ForceLight } from "@/components/ForceLight";

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

// Sem themeColor aqui
export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

// Agora o themeColor vai em viewport
export const viewport: Viewport = {
  themeColor: "#ffffff",
  // Se quiser cobrir light/dark explicitamente:
  // themeColor: [
  //   { media: "(prefers-color-scheme: light)", color: "#ffffff" },
  //   { media: "(prefers-color-scheme: dark)",  color: "#ffffff" },
  // ],
};

export default function RootLayout({ children }: { children: React.ReactNode }) {
  return (
    <html lang="pt-BR" suppressHydrationWarning>
      <head>
        {/* Mant√©m o site sempre claro */}
        <meta name="color-scheme" content="light" />
        <meta name="supported-color-schemes" content="light" />
      </head>
      <body className={`${geistSans.variable} ${geistMono.variable} bg-white text-slate-900 antialiased`}>
        <ForceLight />
        <Providers>{children}</Providers>
      </body>
    </html>
  );
}
